name: Destroy terraform
description: destroy terraform composite action

inputs:
  working-directory:
    description: working directory
    required: false
    default: "terraform/dev"
  region:
    description: "aws region"
    required: false
    default: "ap-northeast-1"
  apply:
    description: "terraform destory"
    required: false
    default: "no"
  terraform_tfstate_key:
    description: "tfstate key"
    required: true
    default: ""
  terraform_tfstate_s3_bucket:
    description: "s3 bucket for tfstate"
    required: true
    default: ""
  rds_username:
    description: "rds username"
    required: true
  rds_password:
    description: "rds password"
    required: true
  rds_dbname:
    description: "rds dbname"
    required: true
  rds_endpoint_name:
    description: "rds endpoint name"
    required: true
  elasticache_name:
    description: "elasticache name"
    required: true
  us1_acm_arn:
    description: "us1 acm arn"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - uses: hashicorp/setup-terraform@v3

    # - name: tflint
    #   working-directory: ${{ inputs.working-directory }}
    #   continue-on-error: true

    - name: fmt
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: true
      run: |
        terraform fmt -check -diff

    - name: init
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: true
      run: |
        terraform init \
          -migrate-state \
          -backend-config="bucket=${{ inputs.terraform_tfstate_s3_bucket }}" \
          -backend-config="key=${{ inputs.terraform_tfstate_key }}" \
          -backend-config="region=${{ inputs.region }}"

    - name: validate
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: true
      run: |
        terraform validate -no-color
      env:
        TF_VAR_rds_username: ${{ inputs.rds_username }}
        TF_VAR_rds_password: ${{ inputs.rds_password }}
        TF_VAR_rds_dbname: ${{ inputs.rds_dbname }}
        TF_VAR_rds_endpoint_name: ${{ inputs.rds_endpoint_name }}
        TF_VAR_elasticache_name: ${{ inputs.elasticache_name }}
        TF_VAR_us1_acm_arn: ${{ inputs.us1_acm_arn }}

    - name: destory
      if: ${{ inputs.apply == 'yes' }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: true
      run: terraform destroy -no-color -input=false -auto-approve
      env:
        TF_VAR_rds_username: ${{ inputs.rds_username }}
        TF_VAR_rds_password: ${{ inputs.rds_password }}
        TF_VAR_rds_dbname: ${{ inputs.rds_dbname }}
        TF_VAR_rds_endpoint_name: ${{ inputs.rds_endpoint_name }}
        TF_VAR_elasticache_name: ${{ inputs.elasticache_name }}
        TF_VAR_us1_acm_arn: ${{ inputs.us1_acm_arn }}